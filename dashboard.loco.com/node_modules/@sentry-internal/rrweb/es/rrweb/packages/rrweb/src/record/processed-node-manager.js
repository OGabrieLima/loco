import {
    onRequestAnimationFrame
} from '../utils.js';

class ProcessedNodeManager {
    constructor() {
        this.nodeMap = new WeakMap();
        this.active = false;
    }
    inOtherBuffer(node, thisBuffer) {
        const buffers = this.nodeMap.get(node);
        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));
    }
    add(node, buffer) {
        if (!this.active) {
            this.active = true;
            onRequestAnimationFrame(() => {
                this.nodeMap = new WeakMap();
                this.active = false;
            });
        }
        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));
    }
    destroy() {}
}

export {
    ProcessedNodeManager as
    default
};